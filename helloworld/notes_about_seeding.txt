****THESE NOTES ARE OUT OF DATE, THIS ISN'T HOW WE'RE DOING IT ANYMORE****

I'm currently thinking I can dump the database to a json file, then we can just load it up again for whatever branch 
Or I could dump the estimator and store it in a fixtures folder

Dump the database using 'python manage.py dumpdata --exclude auth.permission --exclude contenttypes > db.json'
Load the database using 'python manage.py loaddata db.json'


I was thinking that our process would go as follows: 
  1. Train the model in the terminal
  2. Save the trained model to the database
  3. Dump the database to db.json using the above command 
  4. Load db.json when we need to access the estimator 
  5. Push the loaded db to Heroku

What Adrian says 
  When someone makes an API request, run the function

  Store the trained model in a file called estimator.py 
  Pull this model up instead
  This way you always have it, isn't dependent on your database 